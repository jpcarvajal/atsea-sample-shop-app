name: CI-CD

on:
  push:
    branches: [master]


jobs:


  docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        context: [app, database, payment_gateway, reverse_proxy]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image ${{ matrix.context }}
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.context }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.context }}:latest, ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.context }}:${{ github.sha }}

  deploy:

      needs: docker

      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v2
        
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY_ID_AWS }}
            aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY_AWS }}
            aws-region: us-east-2
        
        - name: Check if the instance is running and run it if not
          run: | 
            state=`(aws ec2 describe-instance-status --instance-id ${{ secrets.INSTANCE_ID_AWS }}) | grep -w "running" | wc -l`;
            if [ "$state" -eq 0 ]; then aws ec2 start-instances --instance-ids ${{ secrets.INSTANCE_ID_AWS }}; fi
        
        - name: Copy files via ssh key
          uses: appleboy/scp-action@master
          with:      
            host: ${{ secrets.PUBLIC_DNS }}
            username: ${{ secrets.INSTANCE_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            source: "docker-compose.yml, devsecrets"
            target: "/home/${{ secrets.INSTANCE_USERNAME }}"

        - name: Docker-compose using ssh
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.PUBLIC_DNS }}
            username: ${{ secrets.INSTANCE_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            script: |
                    sudo docker swarm init 
                    sudo docker-compose up -d
                  
        - name: Trigger end to end tests
          run: |
            curl -H "Accept: application/vnd.github.v3+json" -H "Authorization: Bearer ${{ secrets.GIT_HUB_ACCESS_TOKEN }}" --request POST --data '{"event_type": "deployed"}' https://api.github.com/repos/jpcarvajal/atsea-tests/dispatches